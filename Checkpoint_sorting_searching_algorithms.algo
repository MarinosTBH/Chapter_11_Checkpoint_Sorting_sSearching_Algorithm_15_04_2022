PROCEDURE inserrtionSort(arr : ARRAY_OF INTEGER[], n : INTEGER)
VAR
    i, key, j: INTEGER;
BEGIN
    Write("give length of array :")
    Read(n)
    FOR i FROM 1 TO n STEP 1  DO
        key := arr[i];
        j := i - 1;
          /* Move elements of arr[0..i-1], that are 
        greater than key, to one position ahead 
        of their current position */
        WHILE (j >= 0 AND arr[j] > key) DO
            arr[j + 1] := arr[j]
            j := j - 1
        END_WHILE
        arr[j + 1 ] := key
    END_FOR
END

ALGORITHM main
VAR
    i : INTEGER;
    arr : ARRAY_OF INTEGER[];
    n : INTEGER := 0;
BEGIN
    // read length & array 
    Read(n);
    FOR i FROM 0 TO n-1 STEP 1  DO
        Read(arr[i]);
    END_FOR
    //execution
    inserrtionSort(arr, n);
    //write new array
    FOR i FROM 0 TO arr.length-1 STEP 1  DO
        Write(arr[i]);
    END_FOR
END